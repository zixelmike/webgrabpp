**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: vsetv.com
* @MinSWversion: V1.1.1/55.26
* @Revision 0 - [22/08/2015] Jan van Straaten
*   - creation
* @Remarks: weekly refresh starting monday
* @header_end
**------------------------------------------------------------------------------------------------

site {url=vsetv.com|timezone=UTC|maxdays=7|cultureinfo=ru-RU|charset=windows-1251|titlematchfactor=0|nopageoverlaps}

urldate.format {datestring|yyyy-MM-dd}

url_index{url|http://www.vsetv.com/schedule_channel_|channel|_day_|urldate|.html}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}     * to speedup the downloading of the index pages

index_showsplit.scrub {multi()|<div class="chnum">|||<div class="adver">}
index_showsplit.modify {replace()|<div class="pasttime">|\n\n\|}
index_showsplit.modify {replace()|<div class="onair">|\n\n\|}
index_showsplit.modify {replace()|<div class="time">|\n\n\|}

index_start.scrub {regex()||\A(\d{2}:\d{2})||}
index_title.scrub {regex()||<div class=\"(?:past)*prname2\">(.+?)</div>||}
index_title.modify {cleanup(tags="<"">")}
index_title.modify {remove|"}
index_episode.modify {substring(debug type=regex)|'index_title' ",\s+?(\d{1,}\s*?.{0,1}\s*?\d*)\s*с"}
index_urlchannellogo {url()|http://vsetv.com|<div class=chlogo>|<img src="|"|</div>}
/pic/channel_logos/23.gif" alt="2+2" width=75 height=55 class="pic"></div>

index_urlshow.scrub {regex()||<a href=(.+?\.html)||}
index_urlshow.modify {addstart(not "")|http://www.vsetv.com/}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}     * to speedup the downloading of the detail pages

title.scrub {regex()||class=\"showname\">\s+?<h2>(.+?)</h2>||}
titleoriginal.scrub {regex||class=\"showname\">\s+?<h2>(?:.+?)</h2>(.*?)<br>||}
subtitle.modify {addstart|'index_title'}
*subtitle.scrub {single|}
description.scrub {regex||<span class="big">(.*?)</span>||}
description.modify {cleanup(tags="<"">")}
director.scrub {regex()||<strong>Режиссер\(ы\):</strong>(.*?)</span><br>||}
director.modify {replace|,|\|}
actor.scrub {regex||<strong>Актеры:</strong>(.*?)</span><br>||}
actor.modify {replace|,|\|}
presenter.scrub {regex||<strong>Ведущие:</strong>(.*?)</span><br>||}
presenter.modify {replace|,|\|}
*producer.scrub {single|}
*writer.scrub {single|}
*composer.scrub {single|}
*rating.scrub {multi|}
*ratingicon.scrub {multi|}
category.scrub {regex()||class=\"showname\">.+?<strong>(.*?)</strong>||}
category.modify {clear(~ ":")}
country.scrub {regex()||class=\"showname\">.+?(?:<br>)+?\s*?(\w+)||}
productiondate.scrub {single|class="showname">||<strong|<strong>}
starrating.scrub {regex||<span class=\"name\">Зрительский рейтинг:\s*?(\d.*?)</span>||}
starrating.scrub {regex||<span class=\"name\">Рейтинг телешоу:\s*?(\d.*?)</span>||}
*episode.scrub {single|}
*subtitles.scrub {single|}
*premiere.scrub {single|}
*previousshown.scrub {single|}
*
* operations:

**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*index_site_channel.scrub {multi|<option value=channel_|>|</option>|</option>}
*index_site_id.scrub {multi|<option value=channel_||>|</option>}
*scope.range {(channellist)|end}
*index_site_id.modify {remove| selected}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end