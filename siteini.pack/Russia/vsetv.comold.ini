**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: vsetv.com
* @MinSWversion: V2.1
* @Revision 4 - [06/08/2017] Blackbear199
*   - episode info fix
* @Revision 3 - [12/07/2017] Blackbear199
*   - changed url_index to fix gif's used in start time
*   - added subtitle
* @Revision 2 - [01/11/2016] Blackbear199
*   - site changes
* @Revision 1 - [08/09/2016] Blackbear199
*   - site changes
* @Revision 0 - [22/08/2015] Jan van Straaten
*   - creation
* @Remarks: weekly refresh starting monday
* @header_end
**------------------------------------------------------------------------------------------------

site {url=vsetv.com|timezone=Europe/Moscow|maxdays=7|cultureinfo=ru-RU|charset=windows-1251|titlematchfactor=0|nopageoverlaps|allowlastdayoverflow}
site {episodesystem=onscreen}
*
url_index{url|http://www.vsetv.com/schedule_channel_|channel|_day_|urldate|.html}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
urldate.format {datestring|yyyy-MM-dd}
*
index_urlchannellogo.scrub {single(scope=datelogo)|<div class=chlogo>|src="|"|</div>}
index_urlchannellogo.modify {addstart(not "" scope=datelogo)|http://www.vsetv.com/}
*
index_showsplit.scrub {multi|<div id="schedule_container" style="width:300px">|<div class="time">||</div></div>}
*index_showsplit.modify {(debug)} * for debug
*
index_urlshow {url(excludeblock="schedule_channel")|http://www.vsetv.com/|<a href=||html|html}
index_urlshow.modify {addend(not "")|html}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}
*
index_start.scrub {regex||^(\d{2}:\d{2})</div>||}
index_title.scrub {single|<div class="prname2">||</div>|</div>}
*
scope.range{(indexshowdetails)|end}
index_title.modify {cleanup(tags="<"">")}
index_title.modify {replace(type=regex)|, \d+ ч\.$|.}
index_title.modify {replace(type=regex)|\d+\s(эп)\.|с}
index_subtitle.modify {substring(type=regex)|'index_title' "\d+\sс\.\s+\"(.+?)\"\."}
index_title.modify {remove(type=regex)|\d+\sс\.(\s+\".+?\"\.)}
index_episode.modify {substring(pattern="'S1' сезон, 'E1' с""'E1' с" type=regex)|'index_title' "\",\s(\d+\sсезон,\s\d+\sс\|\d+\sс)\."}
index_title.modify {remove(type=regex)|, (?:\d+\sсезон,\s\d+\sс\|\d+\sс)\.}
index_title.modify {remove|"}
index_title.modify {remove(type=regex)|\.$}
end_scope
*
title.scrub {regex||class=\"showname\">\s+?<h2>(.+?)</h2>||}
titleoriginal.scrub {regex||class=\"showname\">\s+?<h2>(?:.+?)</h2>(.*?)<br>||}
titleoriginal.modify {clear('title')}
description.scrub {regex||<span class="big">(.*?)</span>||}
description.modify {cleanup(tags="<"">")}
director.scrub {regex()||<strong>Режиссер\(ы\):</strong>(.*?)</span><br>||}
director.modify {replace|,|\|}
actor.scrub {regex||<strong>Актеры:</strong>(.*?)</span><br>||}
actor.modify {replace|,|\|}
presenter.scrub {regex||<strong>Ведущие:</strong>(.*?)</span><br>||}
presenter.modify {replace|,|\|}
category.scrub {regex()||class=\"showname\">.+?<strong>(.*?)</strong>||}
category.modify {clear(~ ":")}
category.modify {replace| / |\|}
country.scrub {regex()||class=\"showname\">.+?(?:<br>)+?\s*?(\w+)||}
productiondate.scrub {single|class="showname">||<strong|<strong>}
starrating.scrub {regex||<span class=\"name\">Зрительский рейтинг:\s*?(\d.*?)</span>||}
starrating.scrub {regex||<span class=\"name\">Рейтинг телешоу:\s*?(\d.*?)</span>||}
starrating.modify {clear("0.0")}
*
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*index_site_channel.scrub {multi|<option value=channel_|>|</option>|</option>}
*index_site_id.scrub {multi|<option value=channel_||>|</option>}
*scope.range {(channellist)|end}
*index_site_id.modify {remove| selected}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
