**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: tv.nu
* @MinSWversion: V2.1
*   needs nopageoverlap
* @Revision 7 - [08/12/2017] Mat8861 *again: adjust to new site changes
* @Revision 6 - [08/11/2015] Jan van Straaten
*	again: adjust to new site changes
* @Revision 5 - [02/09/2015] Francis De Paemeleere
*   adjust to site changes
* @Revision 4 - [24/04/2013] Jan van Straaten
*   small change in index_start, adapted to site change.
* @Revision 3 - [06/11/2012] Jan van Straaten
*   Urldate.format, for today - idag - no value in the list (site change)
* @Revision 2 - []
*   small change in showsplit, added nopageoverlap
* @Revision 1 - []
*   added category and productiondate, removed html tags in description
* @Revision 0 - []
*   none
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------

site {url=tv.nu|timezone=Europe/Stockholm|maxdays=7|cultureinfo=sv-SE|charset=UTF-8|titlematchfactor=90}
site {ratingsystem=tv.nu|episodesystem=xmltv_ns}
urldate.format {datestring|yyyy-MM-dd}
url_index{url|https://www.tv.nu/api/channels/|##channel##|?date=|urldate|}
url_index.headers {customheader=X-Requested-With=XMLHttpRequest}
index_urlchannellogo.modify {substring(type=regex)|'config_site_id' "##(.*?)$"}
index_urlchannellogo.modify {addstart(not "")|https://new.static.tv.nu/}
scope.range{(urlindex)|end}
index_variable_element.modify {set|'config_site_id'}
index_temp_1.modify {substring(type=regex)|'index_variable_element' "(\d+)##"}
index_variable_element.modify {remove|##'index_temp_1'}
url_index.modify {replace|##channel##|'index_temp_1'}
end_scope
scope.range {(splitindex)|end}
index_showsplit.scrub {regex||{"id":".*?"isPlayProgram".*?}||}
index_showsplit.modify {cleanup(style=unidecode)}
end_scope
scope.range {(indexshowdetails)|end}
index_start.scrub {regex||"startTime":"\d{4}-\d{2}-\d{2}T(\d{2}:\d{2}:\d{2})||}
index_stop.scrub {regex||"endTime":"\d{4}-\d{2}-\d{2}T(\d{2}:\d{2}:\d{2})||}
index_title.scrub {regex||"title":"([^"]*)","||}
index_description.scrub {regex||"description":"([^"]*)","||}
index_description.modify {remove|\}
index_temp_3.scrub {regex||{"id":"([^"]*)","||}
index_urlshow.modify {addstart|http://www.tv.nu/p/'index_temp_3'}
index_urlshow.headers {customheader=X-Requested-With=XMLHttpRequest}     * to speedup the downloading of the detail pages
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}     * to speedup the downloading of the detail pages
end_scope
title.scrub {regex||^.*?"title"\s*:\s*"([^"\\]*(?:\\.[^"\\]*)*)"||}
title.modify {cleanup(style=jsondecode)}
temp_1.scrub {regex||^.*?"seasonNumber":([+-]?\d*)||}
temp_2.scrub {regex||^.*?"episodeNumber":([+-]?\d*)||}
temp_3.scrub {regex||^.*?"totalEpisodes":([+-]?\d*),"||}
subtitle.scrub {regex||^.*?"episodeTitle"\s*:\s*"([^"\\]*(?:\\.[^"\\]*)*)"||}
subtitle.modify {cleanup(style=jsondecode)}
actor.scrub {multi(max=4 includeblock="Skådespelare")|<a href="|<span class="zeta text-bold">|</span>|</a>}
writer.scrub {multi(max=2 includeblock="Författare")|<a href="|<span class="zeta text-bold">|</span>|</a>}
presenter.scrub {multi(max=2 includeblock="Programledare")|<a href="|<span class="zeta text-bold">|</span>|</a>}
producer.scrub {multi(max=2 includeblock="Exekutiv producent""Producent")|<a href="|<span class="zeta text-bold">|</span>|</a>}
director.scrub {multi(max=2 includeblock="Regissör")|<a href="|<span class="zeta text-bold">|</span>|</a>}
category.scrub {single(max=2 separator="/")|<span class="indent-right">||</span>}  *remove separator to have category in one line
*category.scrub {regex||^.*?"genres"\s*:\s*\["(?:((?:[^"\\]*?(?:\\.[^"\\]*?)*?))",{0,1})*?]||}  * this category still works, use if you need more categories and disable previous
category.modify {cleanup(style=jsondecode)}
showicon.scrub {single|<div class="positioner positioner|<img src="|?|</div>}
productiondate.scrub {single|<span class="indent-right|<span>|</span>|</p>}
* temp_1 = season
* temp_2 = episode
* temp_3 = totalepisode
temp_1.modify {calculate(not="" format=F0)|1 -}
temp_2.modify {calculate(not="" format=F0)|1 -}
temp_3.modify {calculate(not="" format=F0)|1 -}
episode.modify {clear}
episode.modify {addend('temp_1' not="")|'temp_1'}
episode.modify {addend|.}
episode.modify {addend('temp_2' not="")|'temp_2'}
*episode.modify {addend|/}
episode.modify {addend('temp_3' not="")|/'temp_3'}
episode.modify {clear(=".")}
episode.modify {clear(="./")}
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index{url|https://www.tv.nu/api/channels?all=true}
*index_site_id.scrub {regex||{"id":(\d+),"timeZone":"||}
*index_site_channel.scrub {regex||{"id":\d+,"timeZone":".*?"name":"(.*?)","||}
*index_site_channel.modify {cleanup(style=unidecode)}
*index_temp_1.scrub {regex||{"id".*?"url":"https:.*?new.static.tv.nu.*?(\d+)","||}
*scope.range{(channellist)|end}
*index_temp_2.modify {set|0}
*loop{(each "index_temp_9" in 'index_site_id')|end} 
*index_temp_8.modify {substring(type=element)|'index_temp_1' 'index_temp_2' 1}
*index_temp_7.modify {addend|'index_temp_9'##'index_temp_8'#_#} 
*index_temp_2.modify {calculate(format=F0)|1 +} 
*end_loop
*index_site_id.modify {set|'index_temp_7'}
*index_site_id.modify {replace|#_#|\|} 
*index_site_id.modify {remove(type=element)|-1 1} 
*index_site_id.modify {cleanup(removeduplicates link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
