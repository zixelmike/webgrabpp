**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: programme-television.org
* @MinSWversion: V2.1
* @Revision 0 - [24/08/2017] Mat8861 & Blackbear199
*   - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------

site {url=programme-television.org|timezone=Europe/Paris|maxdays=7|cultureinfo=fr-FR|charset=UTF-8|titlematchfactor=90|nopageoverlaps}
site {episodesystem=onscreen}
urldate.format {datestring|yyyyMMdd} 
subpage.format {list|1|2|3|4|5|6}
url_index{url|http://www.programme-television.org/var/t7j/storage/json/tranches/|channel|_|urldate|_t|subpage|.json}
url_index.headers 	  {customheader=Accept-Encoding=gzip,deflate}     * to speedup the downloading of the index pages
*
index_showsplit.scrub {multi|{"grille":|{"na||]}});}
index_showsplit.modify {cleanup(style=unidecode)}
index_showsplit.modify {cleanup(style=jsondecode)}
index_start.scrub {single|"heureDif":"||",}
index_start.modify {replace|h|:}
index_title.scrub {single|"titre":"||"} 
index_subtitle.scrub {single|"soustitre":"||",}
index_showicon.scrub {single|"photo":"||"}
index_episode.scrub {regex(pattern="nbEpi:'Et1',numEpi:'E1',saison:'S1'")||","nbEpi":"\d+","numEpi":"\d+","saison":"\d+"||}
index_episode.modify {remove|"}
index_category.scrub{single|ture":"||",}
index_actor.scrub {single(separator="," max=3)|"Acteur":["||"],}
index_actor.modify {remove|"}
index_producer.scrub {single(separator="","" max=2)|"Réalisateur|":["|"|],"}
index_producer.modify {replace|","|\|}
index_presenter.scrub {single|{"Présentateur vedette":|["|"|]|,}
index_composer.scrub {single(max=2)|"Musique":["||"],}
index_composer.modify {replace|","|\|}
index_urlchannellogo.modify {addstart|http://www.programme-television.org/logo_channels/35x35/chaine_'config_site_id'.png}

*
index_urlshow {url|http://www.programme-television.org|"urlDiff|":"|"|,}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}     * to speedup the downloading of the detail pages
index_temp_1.modify {set|'index_urlshow'}
index_temp_1.modify {remove(type=regex)|"(^.*?#).*?$"}
*
country.scrub {single|Pays de production :|</strong>|</li>|</li>}
title.scrub {single|<div class="bloc_titre">|<h1>|<span|</h1>|</h1>}
title.modify {cleanup(tags="<"">")}
subtitle.scrub {single()|<li class="tsj145sub">||</li>}
description.scrub {single|<div class="bloc_cnt tsj145bloctitre">|<div class="cnt">|</div>|</div>} 
description.modify {cleanup(tags="<"">")}
*
index_urlsubdetail.headers {customheader=Accept-Encoding=gzip,deflate}     * to speedup the downloading of the subdetail pages
index_urlsubdetail.modify {set|'index_temp_1'}
index_urlsubdetail.modify {addstart()|http://www.programme-television.org/getinfos/}
*
subdetail_title.scrub{single|<div class=\"bloc_titre\">|<h1>|<span|<\/h1>|<\/h1>}
subdetail_title.modify {cleanup(tags="<"">")}
subdetail_title.modify {cleanup(style=jsondecode)}
subdetail_description.scrub {single|<div class=\"bloc_cnt tsj145bloctitre\">|<div class=\"cnt\">|<\/div>|<\/div>} *required by movies
subdetail_description.modify {cleanup(style=jsondecode)}
subdetail_description.modify {cleanup(tags="<"">")}
subdetail_productiondate.scrub {single|<li class=\"tsj145sub\"><\/li>||<\/li>}
country.scrub {single|<strong>Pays de production :<\/strong>||<\/li>}
*
* 
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index {url|http://www.programme-television.org/bouquets-tv/toutes-les-chaines}
*index_site_id.scrub {multi|Grandes Chaînes|rel="|" class="|<!-- /bloc bloc_guidetv -->}
*index_site_channel.scrub {multi|Grandes Chaînes|class="texte_cnt"><span>|</span></span></span></span>|<!-- /bloc bloc_guidetv -->}
*index_site_channel.modify {replace|'| } *needed by channel L'Equipe
*scope.range {(channellist)|end}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
