**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: sky.de
* @MinSWversion: V1.57
* @Revision 4 - [20/04/2017] Blackbear199
* - showsplit fix
* @Revision 3 - [22/03/2017] Blackbear199
* - site changes
* @Revision 2 - [13/06/2016] Jan van Straaten
*	- adapted to build 56.25
* @Revision 1 - [08/06/2016] Blackbear199
*   - rewrite
* @Revision 0 - [15/10/2015] Francis De Paemeleere /  Willy De Wilde
*   - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=sky.de|timezone=Europe/Berlin|maxdays=14|cultureinfo=de-DE|charset=utf-8|titlematchfactor=90}
site {ratingsystem=FSK|episodesystem=onscreen}
*
url_index{url|http://www.skygo.sky.de/epgd/sg/web/eventList/|urldate|/##channel##/}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
*
urldate.format {datestring|dd.MM.yyyy}
*
sacope,range{(urlindex)|end}
index_variable_element.modify {substring(type=regex)|'config_site_id' "^(\d+)##"}
url_index.modify {replace|##channel##|'index_variable_element'}
end_scope
*
global_temp_1.modify {substring(type=regex)|'config_site_id' "##(\d+)$"}
index_urlchannellogo.modify {addstart|http://www.skygo.sky.de/sg/bin/EPGChannel/web/channel_'global_temp_1'.png}
*
index_showsplit.scrub {multi|"'index_variable_element'":[{||}]|}]}
scope.range{(splitindex)|end}
index_showsplit.modify {replace|\},\{|\|}
index_temp_1.modify {substring(type=regex)|'index_showsplit' "\"startDate\":\"\d{2}\.\d{2}\.\d{4}\",\"startTime\":\"\d{2}:\d{2}\""}
index_temp_1.modify {cleanup(removeduplicates span=2 link="index_showsplit")}
*index_showsplit.modify {(debug)} *debug
end_scope
*
index_temp_1.scrub {single|"id":"||"|"}
index_urlshow.modify {addstart|http://skyonline.sky.de/epgd/st/web/eventDetail/'index_temp_1'/'index_variable_element'/}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}

*
index_start.scrub {regex||"startDate":"(\d{2}\.\d{2}\.\d{4}","startTime":"\d{2}:\d{2})"||}
index_start.modify {replace|","startTime":"| }
index_stop.scrub {regex||"endDate":"(\d{2}\.\d{2}\.\d{4}","endTime":"\d{2}:\d{2})"||}
index_stop.modify {replace|","endTime":"| }
index_title.scrub {single|"title":"||",|",}
index_subtitle.scrub {single|"subtitle":"||",|",}
*
index_title.modify {cleanup(style=unidecode)}
index_title.modify {cleanup(style=htmldecodespecialchar)}
index_subtitle.modify {cleanup(style=unidecode)}
index_subtitle.modify {cleanup(style=htmldecodespecialchar)}
index_subtitle.modify {clear(~ "Staffel")}
index_subtitle.modify {clear(~ "Folge")}
*
title.scrub {single|"title1":"||",|",}
description.scrub {single|"detailTxt":"||","|","}
productiondate.scrub {single|"year":"||",|",}
country.scrub {single|"country":"||",|",}
rating.scrub {single|"fsk":"||",|",}
showicon.scrub {single|"imageUrl":"||",|",}
*
title.modify {cleanup(style=unidecode)}
title.modify {cleanup(style=htmldecodespecialchar)}
description.modify {cleanup(style=unidecode)}
description.modify {cleanup(style=htmldecodespecialchar)}
description.modify {cleanup(style=jsondecode)}
showicon.modify {addstart(not "")|http://skyonline.sky.de}
*
urlsubdetail {url||"detailPage":"||",|",}
urlsubdetail.headers {customheader=Accept-Encoding=gzip,deflate}
*
subdetail_category.scrub {single(separator="," exclude="Sky""Disney")|class="meta_genre">||</span>|</span>}
subdetail_director.scrub {multi|<h3>Director</h3>|<p itemprop="name">|</p>|</div>}
subdetail_actor.scrub {multi|<h2>Cast</h2>|<h3 itemprop="name">|</h3>|</div>}
subdetail_producer.scrub {multi|<h3>Producer</h3>|<p itemprop="name">|</p>|</div>}
subdetail_writer.scrub {multi|<h3>Writer</h3>|<p itemprop="name">|</p>|</div>}
*
subdetail_episode.scrub {single|<div class="detail_header">|<h2>|</h2>|</div>}
subdetail_episode.modify {substring(pattern="S'S1'E'E1'" type=regex)|"^(S\d+E\d+):"}
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index{url|http://www.skygo.sky.de/epgd/sg/web/channelList}
*index_site_id.scrub {regex||\{"id":"(\d+","name":"[^"]*","color":"[^"]*","hd":\d,"logo":"[^"]*)\.png",||}
*index_site_id.modify {replace(type=regex)|^\d+(","name":"[^"]*","color":"[^"]*","hd":\d,"logo":"/sg/bin/EPGChannel/web/channel_).*$|##}
*index_site_channel.scrub {regex||\{"id":"\d+","name":"([^"]*)",||}
*index_site_channel.modify {cleanup(style=unidecode)}
*scope.range {(channellist)|end}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
